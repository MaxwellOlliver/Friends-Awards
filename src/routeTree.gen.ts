/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as VoteImport } from './routes/vote'
import { Route as SignupImport } from './routes/signup'
import { Route as SessionImport } from './routes/session'
import { Route as ResultsImport } from './routes/results'
import { Route as EnterSessionImport } from './routes/enter-session'
import { Route as CreateSessionImport } from './routes/create-session'
import { Route as AuthImport } from './routes/_auth'
import { Route as IndexImport } from './routes/index'
import { Route as VoteRegisteredSessionImport } from './routes/vote-registered/$session'
import { Route as AuthDashboardImport } from './routes/_auth/dashboard'
import { Route as AuthSessionSessionIdImport } from './routes/_auth/session/$sessionId'
import { Route as AuthDashboardMySessionsImport } from './routes/_auth/dashboard/my-sessions'
import { Route as AuthDashboardHomeImport } from './routes/_auth/dashboard/home'
import { Route as AuthSessionSessionIdLobbyImport } from './routes/_auth/session/$sessionId.lobby'
import { Route as AuthSessionSessionIdHostImport } from './routes/_auth/session/$sessionId.host'

// Create/Update Routes

const VoteRoute = VoteImport.update({
  id: '/vote',
  path: '/vote',
  getParentRoute: () => rootRoute,
} as any)

const SignupRoute = SignupImport.update({
  id: '/signup',
  path: '/signup',
  getParentRoute: () => rootRoute,
} as any)

const SessionRoute = SessionImport.update({
  id: '/session',
  path: '/session',
  getParentRoute: () => rootRoute,
} as any)

const ResultsRoute = ResultsImport.update({
  id: '/results',
  path: '/results',
  getParentRoute: () => rootRoute,
} as any)

const EnterSessionRoute = EnterSessionImport.update({
  id: '/enter-session',
  path: '/enter-session',
  getParentRoute: () => rootRoute,
} as any)

const CreateSessionRoute = CreateSessionImport.update({
  id: '/create-session',
  path: '/create-session',
  getParentRoute: () => rootRoute,
} as any)

const AuthRoute = AuthImport.update({
  id: '/_auth',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const VoteRegisteredSessionRoute = VoteRegisteredSessionImport.update({
  id: '/vote-registered/$session',
  path: '/vote-registered/$session',
  getParentRoute: () => rootRoute,
} as any)

const AuthDashboardRoute = AuthDashboardImport.update({
  id: '/dashboard',
  path: '/dashboard',
  getParentRoute: () => AuthRoute,
} as any)

const AuthSessionSessionIdRoute = AuthSessionSessionIdImport.update({
  id: '/session/$sessionId',
  path: '/session/$sessionId',
  getParentRoute: () => AuthRoute,
} as any)

const AuthDashboardMySessionsRoute = AuthDashboardMySessionsImport.update({
  id: '/my-sessions',
  path: '/my-sessions',
  getParentRoute: () => AuthDashboardRoute,
} as any)

const AuthDashboardHomeRoute = AuthDashboardHomeImport.update({
  id: '/home',
  path: '/home',
  getParentRoute: () => AuthDashboardRoute,
} as any)

const AuthSessionSessionIdLobbyRoute = AuthSessionSessionIdLobbyImport.update({
  id: '/lobby',
  path: '/lobby',
  getParentRoute: () => AuthSessionSessionIdRoute,
} as any)

const AuthSessionSessionIdHostRoute = AuthSessionSessionIdHostImport.update({
  id: '/host',
  path: '/host',
  getParentRoute: () => AuthSessionSessionIdRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/_auth': {
      id: '/_auth'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthImport
      parentRoute: typeof rootRoute
    }
    '/create-session': {
      id: '/create-session'
      path: '/create-session'
      fullPath: '/create-session'
      preLoaderRoute: typeof CreateSessionImport
      parentRoute: typeof rootRoute
    }
    '/enter-session': {
      id: '/enter-session'
      path: '/enter-session'
      fullPath: '/enter-session'
      preLoaderRoute: typeof EnterSessionImport
      parentRoute: typeof rootRoute
    }
    '/results': {
      id: '/results'
      path: '/results'
      fullPath: '/results'
      preLoaderRoute: typeof ResultsImport
      parentRoute: typeof rootRoute
    }
    '/session': {
      id: '/session'
      path: '/session'
      fullPath: '/session'
      preLoaderRoute: typeof SessionImport
      parentRoute: typeof rootRoute
    }
    '/signup': {
      id: '/signup'
      path: '/signup'
      fullPath: '/signup'
      preLoaderRoute: typeof SignupImport
      parentRoute: typeof rootRoute
    }
    '/vote': {
      id: '/vote'
      path: '/vote'
      fullPath: '/vote'
      preLoaderRoute: typeof VoteImport
      parentRoute: typeof rootRoute
    }
    '/_auth/dashboard': {
      id: '/_auth/dashboard'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof AuthDashboardImport
      parentRoute: typeof AuthImport
    }
    '/vote-registered/$session': {
      id: '/vote-registered/$session'
      path: '/vote-registered/$session'
      fullPath: '/vote-registered/$session'
      preLoaderRoute: typeof VoteRegisteredSessionImport
      parentRoute: typeof rootRoute
    }
    '/_auth/dashboard/home': {
      id: '/_auth/dashboard/home'
      path: '/home'
      fullPath: '/dashboard/home'
      preLoaderRoute: typeof AuthDashboardHomeImport
      parentRoute: typeof AuthDashboardImport
    }
    '/_auth/dashboard/my-sessions': {
      id: '/_auth/dashboard/my-sessions'
      path: '/my-sessions'
      fullPath: '/dashboard/my-sessions'
      preLoaderRoute: typeof AuthDashboardMySessionsImport
      parentRoute: typeof AuthDashboardImport
    }
    '/_auth/session/$sessionId': {
      id: '/_auth/session/$sessionId'
      path: '/session/$sessionId'
      fullPath: '/session/$sessionId'
      preLoaderRoute: typeof AuthSessionSessionIdImport
      parentRoute: typeof AuthImport
    }
    '/_auth/session/$sessionId/host': {
      id: '/_auth/session/$sessionId/host'
      path: '/host'
      fullPath: '/session/$sessionId/host'
      preLoaderRoute: typeof AuthSessionSessionIdHostImport
      parentRoute: typeof AuthSessionSessionIdImport
    }
    '/_auth/session/$sessionId/lobby': {
      id: '/_auth/session/$sessionId/lobby'
      path: '/lobby'
      fullPath: '/session/$sessionId/lobby'
      preLoaderRoute: typeof AuthSessionSessionIdLobbyImport
      parentRoute: typeof AuthSessionSessionIdImport
    }
  }
}

// Create and export the route tree

interface AuthDashboardRouteChildren {
  AuthDashboardHomeRoute: typeof AuthDashboardHomeRoute
  AuthDashboardMySessionsRoute: typeof AuthDashboardMySessionsRoute
}

const AuthDashboardRouteChildren: AuthDashboardRouteChildren = {
  AuthDashboardHomeRoute: AuthDashboardHomeRoute,
  AuthDashboardMySessionsRoute: AuthDashboardMySessionsRoute,
}

const AuthDashboardRouteWithChildren = AuthDashboardRoute._addFileChildren(
  AuthDashboardRouteChildren,
)

interface AuthSessionSessionIdRouteChildren {
  AuthSessionSessionIdHostRoute: typeof AuthSessionSessionIdHostRoute
  AuthSessionSessionIdLobbyRoute: typeof AuthSessionSessionIdLobbyRoute
}

const AuthSessionSessionIdRouteChildren: AuthSessionSessionIdRouteChildren = {
  AuthSessionSessionIdHostRoute: AuthSessionSessionIdHostRoute,
  AuthSessionSessionIdLobbyRoute: AuthSessionSessionIdLobbyRoute,
}

const AuthSessionSessionIdRouteWithChildren =
  AuthSessionSessionIdRoute._addFileChildren(AuthSessionSessionIdRouteChildren)

interface AuthRouteChildren {
  AuthDashboardRoute: typeof AuthDashboardRouteWithChildren
  AuthSessionSessionIdRoute: typeof AuthSessionSessionIdRouteWithChildren
}

const AuthRouteChildren: AuthRouteChildren = {
  AuthDashboardRoute: AuthDashboardRouteWithChildren,
  AuthSessionSessionIdRoute: AuthSessionSessionIdRouteWithChildren,
}

const AuthRouteWithChildren = AuthRoute._addFileChildren(AuthRouteChildren)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '': typeof AuthRouteWithChildren
  '/create-session': typeof CreateSessionRoute
  '/enter-session': typeof EnterSessionRoute
  '/results': typeof ResultsRoute
  '/session': typeof SessionRoute
  '/signup': typeof SignupRoute
  '/vote': typeof VoteRoute
  '/dashboard': typeof AuthDashboardRouteWithChildren
  '/vote-registered/$session': typeof VoteRegisteredSessionRoute
  '/dashboard/home': typeof AuthDashboardHomeRoute
  '/dashboard/my-sessions': typeof AuthDashboardMySessionsRoute
  '/session/$sessionId': typeof AuthSessionSessionIdRouteWithChildren
  '/session/$sessionId/host': typeof AuthSessionSessionIdHostRoute
  '/session/$sessionId/lobby': typeof AuthSessionSessionIdLobbyRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '': typeof AuthRouteWithChildren
  '/create-session': typeof CreateSessionRoute
  '/enter-session': typeof EnterSessionRoute
  '/results': typeof ResultsRoute
  '/session': typeof SessionRoute
  '/signup': typeof SignupRoute
  '/vote': typeof VoteRoute
  '/dashboard': typeof AuthDashboardRouteWithChildren
  '/vote-registered/$session': typeof VoteRegisteredSessionRoute
  '/dashboard/home': typeof AuthDashboardHomeRoute
  '/dashboard/my-sessions': typeof AuthDashboardMySessionsRoute
  '/session/$sessionId': typeof AuthSessionSessionIdRouteWithChildren
  '/session/$sessionId/host': typeof AuthSessionSessionIdHostRoute
  '/session/$sessionId/lobby': typeof AuthSessionSessionIdLobbyRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/_auth': typeof AuthRouteWithChildren
  '/create-session': typeof CreateSessionRoute
  '/enter-session': typeof EnterSessionRoute
  '/results': typeof ResultsRoute
  '/session': typeof SessionRoute
  '/signup': typeof SignupRoute
  '/vote': typeof VoteRoute
  '/_auth/dashboard': typeof AuthDashboardRouteWithChildren
  '/vote-registered/$session': typeof VoteRegisteredSessionRoute
  '/_auth/dashboard/home': typeof AuthDashboardHomeRoute
  '/_auth/dashboard/my-sessions': typeof AuthDashboardMySessionsRoute
  '/_auth/session/$sessionId': typeof AuthSessionSessionIdRouteWithChildren
  '/_auth/session/$sessionId/host': typeof AuthSessionSessionIdHostRoute
  '/_auth/session/$sessionId/lobby': typeof AuthSessionSessionIdLobbyRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | ''
    | '/create-session'
    | '/enter-session'
    | '/results'
    | '/session'
    | '/signup'
    | '/vote'
    | '/dashboard'
    | '/vote-registered/$session'
    | '/dashboard/home'
    | '/dashboard/my-sessions'
    | '/session/$sessionId'
    | '/session/$sessionId/host'
    | '/session/$sessionId/lobby'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | ''
    | '/create-session'
    | '/enter-session'
    | '/results'
    | '/session'
    | '/signup'
    | '/vote'
    | '/dashboard'
    | '/vote-registered/$session'
    | '/dashboard/home'
    | '/dashboard/my-sessions'
    | '/session/$sessionId'
    | '/session/$sessionId/host'
    | '/session/$sessionId/lobby'
  id:
    | '__root__'
    | '/'
    | '/_auth'
    | '/create-session'
    | '/enter-session'
    | '/results'
    | '/session'
    | '/signup'
    | '/vote'
    | '/_auth/dashboard'
    | '/vote-registered/$session'
    | '/_auth/dashboard/home'
    | '/_auth/dashboard/my-sessions'
    | '/_auth/session/$sessionId'
    | '/_auth/session/$sessionId/host'
    | '/_auth/session/$sessionId/lobby'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AuthRoute: typeof AuthRouteWithChildren
  CreateSessionRoute: typeof CreateSessionRoute
  EnterSessionRoute: typeof EnterSessionRoute
  ResultsRoute: typeof ResultsRoute
  SessionRoute: typeof SessionRoute
  SignupRoute: typeof SignupRoute
  VoteRoute: typeof VoteRoute
  VoteRegisteredSessionRoute: typeof VoteRegisteredSessionRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AuthRoute: AuthRouteWithChildren,
  CreateSessionRoute: CreateSessionRoute,
  EnterSessionRoute: EnterSessionRoute,
  ResultsRoute: ResultsRoute,
  SessionRoute: SessionRoute,
  SignupRoute: SignupRoute,
  VoteRoute: VoteRoute,
  VoteRegisteredSessionRoute: VoteRegisteredSessionRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/_auth",
        "/create-session",
        "/enter-session",
        "/results",
        "/session",
        "/signup",
        "/vote",
        "/vote-registered/$session"
      ]
    },
    "/": {
      "filePath": "index.ts"
    },
    "/_auth": {
      "filePath": "_auth.ts",
      "children": [
        "/_auth/dashboard",
        "/_auth/session/$sessionId"
      ]
    },
    "/create-session": {
      "filePath": "create-session.ts"
    },
    "/enter-session": {
      "filePath": "enter-session.ts"
    },
    "/results": {
      "filePath": "results.ts"
    },
    "/session": {
      "filePath": "session.ts"
    },
    "/signup": {
      "filePath": "signup.ts"
    },
    "/vote": {
      "filePath": "vote.ts"
    },
    "/_auth/dashboard": {
      "filePath": "_auth/dashboard.tsx",
      "parent": "/_auth",
      "children": [
        "/_auth/dashboard/home",
        "/_auth/dashboard/my-sessions"
      ]
    },
    "/vote-registered/$session": {
      "filePath": "vote-registered/$session.tsx"
    },
    "/_auth/dashboard/home": {
      "filePath": "_auth/dashboard/home.ts",
      "parent": "/_auth/dashboard"
    },
    "/_auth/dashboard/my-sessions": {
      "filePath": "_auth/dashboard/my-sessions.ts",
      "parent": "/_auth/dashboard"
    },
    "/_auth/session/$sessionId": {
      "filePath": "_auth/session/$sessionId.tsx",
      "parent": "/_auth",
      "children": [
        "/_auth/session/$sessionId/host",
        "/_auth/session/$sessionId/lobby"
      ]
    },
    "/_auth/session/$sessionId/host": {
      "filePath": "_auth/session/$sessionId.host.ts",
      "parent": "/_auth/session/$sessionId"
    },
    "/_auth/session/$sessionId/lobby": {
      "filePath": "_auth/session/$sessionId.lobby.ts",
      "parent": "/_auth/session/$sessionId"
    }
  }
}
ROUTE_MANIFEST_END */
